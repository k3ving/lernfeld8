CREATE PROCEDURE [dbo].[GetHighscores]
AS
BEGIN
	SET NOCOUNT ON;

	SELECT TOP(100)
		[Users].[UserName] AS 'User',
		[Scores].[Score]
	FROM [Scores]
		INNER JOIN [Users] ON [Scores].[UserId] = [Users].[Id]
	ORDER BY ([Scores].[Score]) DESC
END
_________________________________________________________________________________

CREATE PROCEDURE [dbo].[AddScore]
	@User nvarchar(64),
	@Score int
AS
BEGIN
	SET NOCOUNT ON;

    	INSERT INTO [dbo].[Scores] ([UserId], [Score], [CreatedOn])
	VALUES ((SELECT [Id] FROM [dbo].[Users] WHERE [UserName] = @User), @Score, CURRENT_TIMESTAMP)
END
_________________________________________________________________________________

CREATE PROCEDURE [dbo].[Login]
	@User nvarchar(64),
	@Password nvarchar(128)
AS
BEGIN
	SET NOCOUNT ON;

	SELECT
    CASE WHEN EXISTS 
    (
        SELECT * FROM [Users] WHERE [UserName] = @User AND [Password] = @Password
    )
    THEN 1
    ELSE 0
END
_________________________________________________________________________________

CREATE TABLE [dbo].[Scores](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[UserId] [int] NOT NULL,
	[Score] [int] NOT NULL,
	[CreatedOn] [datetime] NOT NULL
) ON [PRIMARY]
__________________________________________________________________________________

CREATE TABLE [dbo].[Users](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[UserName] [nvarchar](64) NOT NULL,
	[Password] [nvarchar](max) NOT NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]